import { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  console.log('üåê Starting multilingual data seed...');

  // Get admin user for created_by fields
  const adminUser = await prisma.sys_user.findFirst({
    where: { email: 'admin@jairak.com' }
  });

  if (!adminUser) {
    console.error('‚ùå Admin user not found. Please run the main seed first.');
    return;
  }

  // Additional Labels with Thai translations
  console.log('üè∑Ô∏è Creating additional labels with translations...');
  
  const additionalLabels = [
    // Form labels
    { key: 'form.required_field', default: 'Required field', thai: '‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö' },
    { key: 'form.optional_field', default: 'Optional field', thai: '‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö' },
    { key: 'form.select_option', default: 'Select an option', thai: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å' },
    { key: 'form.upload_file', default: 'Upload file', thai: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå' },
    { key: 'form.choose_file', default: 'Choose file', thai: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå' },
    { key: 'form.no_file_chosen', default: 'No file chosen', thai: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå' },
    
    // Status labels
    { key: 'status.active', default: 'Active', thai: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' },
    { key: 'status.inactive', default: 'Inactive', thai: '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' },
    { key: 'status.pending', default: 'Pending', thai: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
    { key: 'status.approved', default: 'Approved', thai: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'status.rejected', default: 'Rejected', thai: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò' },
    { key: 'status.draft', default: 'Draft', thai: '‡πÅ‡∏ö‡∏ö‡∏£‡πà‡∏≤‡∏á' },
    { key: 'status.published', default: 'Published', thai: '‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'status.archived', default: 'Archived', thai: '‡πÄ‡∏Å‡πá‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£' },
    
    // Date/Time labels
    { key: 'datetime.today', default: 'Today', thai: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ' },
    { key: 'datetime.yesterday', default: 'Yesterday', thai: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô' },
    { key: 'datetime.tomorrow', default: 'Tomorrow', thai: '‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ' },
    { key: 'datetime.this_week', default: 'This week', thai: '‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ' },
    { key: 'datetime.last_week', default: 'Last week', thai: '‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'datetime.this_month', default: 'This month', thai: '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ' },
    { key: 'datetime.last_month', default: 'Last month', thai: '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß' },
    
    // Table headers
    { key: 'table.id', default: 'ID', thai: '‡∏£‡∏´‡∏±‡∏™' },
    { key: 'table.name', default: 'Name', thai: '‡∏ä‡∏∑‡πà‡∏≠' },
    { key: 'table.description', default: 'Description', thai: '‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢' },
    { key: 'table.created_date', default: 'Created Date', thai: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á' },
    { key: 'table.updated_date', default: 'Updated Date', thai: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' },
    { key: 'table.created_by', default: 'Created By', thai: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢' },
    { key: 'table.actions', default: 'Actions', thai: '‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' },
    { key: 'table.status', default: 'Status', thai: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞' },
    
    // Pagination
    { key: 'pagination.first', default: 'First', thai: '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å' },
    { key: 'pagination.last', default: 'Last', thai: '‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢' },
    { key: 'pagination.showing', default: 'Showing', thai: '‡πÅ‡∏™‡∏î‡∏á' },
    { key: 'pagination.of', default: 'of', thai: '‡∏à‡∏≤‡∏Å' },
    { key: 'pagination.entries', default: 'entries', thai: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£' },
    { key: 'pagination.per_page', default: 'Per page', thai: '‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤' },
    
    // Confirmation messages
    { key: 'confirm.save_changes', default: 'Do you want to save changes?', thai: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?' },
    { key: 'confirm.discard_changes', default: 'Discard unsaved changes?', thai: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å?' },
    { key: 'confirm.logout', default: 'Are you sure you want to logout?', thai: '‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö?' },
    
    // Error messages
    { key: 'error.not_found', default: 'Not found', thai: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' },
    { key: 'error.unauthorized', default: 'Unauthorized', thai: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á' },
    { key: 'error.forbidden', default: 'Forbidden', thai: '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï' },
    { key: 'error.server_error', default: 'Server error', thai: '‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' },
    { key: 'error.network_error', default: 'Network error', thai: '‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' },
    
    // Success messages
    { key: 'success.saved', default: 'Saved successfully', thai: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'success.updated', default: 'Updated successfully', thai: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'success.deleted', default: 'Deleted successfully', thai: '‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' },
    { key: 'success.uploaded', default: 'Uploaded successfully', thai: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' },
    
    // User interface
    { key: 'ui.home', default: 'Home', thai: '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å' },
    { key: 'ui.help', default: 'Help', thai: '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠' },
    { key: 'ui.about', default: 'About', thai: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö' },
    { key: 'ui.contact', default: 'Contact', thai: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠' },
    { key: 'ui.language', default: 'Language', thai: '‡∏†‡∏≤‡∏©‡∏≤' },
    { key: 'ui.theme', default: 'Theme', thai: '‡∏ò‡∏µ‡∏°' },
    { key: 'ui.dark_mode', default: 'Dark Mode', thai: '‡πÇ‡∏´‡∏°‡∏î‡∏°‡∏∑‡∏î' },
    { key: 'ui.light_mode', default: 'Light Mode', thai: '‡πÇ‡∏´‡∏°‡∏î‡∏™‡∏ß‡πà‡∏≤‡∏á' },
  ];

  for (const labelData of additionalLabels) {
    const label = await prisma.sys_label.upsert({
      where: { key: labelData.key },
      update: {},
      create: {
        key: labelData.key,
        default_value: labelData.default,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });

    // Create Thai translation
    await prisma.sys_label_translation.upsert({
      where: {
        label_id_language_code: {
          label_id: label.id,
          language_code: 'th',
        },
      },
      update: {},
      create: {
        label_id: label.id,
        language_code: 'th',
        value: labelData.thai,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });

    // Create English translation (same as default)
    await prisma.sys_label_translation.upsert({
      where: {
        label_id_language_code: {
          label_id: label.id,
          language_code: 'en',
        },
      },
      update: {},
      create: {
        label_id: label.id,
        language_code: 'en',
        value: labelData.default,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });
  }

  // Additional content categories with translations
  console.log('üìÇ Creating additional content categories...');
  
  const additionalCategories = [
    {
      name: 'Products',
      slug: 'products',
      description: 'Product information and details',
      thai_name: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
      thai_desc: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
      sort_order: 4,
    },
    {
      name: 'Services',
      slug: 'services',
      description: 'Service offerings and descriptions',
      thai_name: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
      thai_desc: '‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢',
      sort_order: 5,
    },
    {
      name: 'Events',
      slug: 'events',
      description: 'Upcoming events and activities',
      thai_name: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°',
      thai_desc: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
      sort_order: 6,
    },
    {
      name: 'Gallery',
      slug: 'gallery',
      description: 'Photo and video gallery',
      thai_name: '‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ',
      thai_desc: '‡∏Ñ‡∏•‡∏±‡∏á‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠',
      sort_order: 7,
    },
  ];

  for (const catData of additionalCategories) {
    const category = await prisma.mod_category.upsert({
      where: { slug: catData.slug },
      update: {},
      create: {
        name: catData.name,
        slug: catData.slug,
        description: catData.description,
        sort_order: catData.sort_order,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });

    // Create translations
    await prisma.mod_category_translation.upsert({
      where: {
        category_id_language_code: {
          category_id: category.id,
          language_code: 'th',
        },
      },
      update: {},
      create: {
        category_id: category.id,
        language_code: 'th',
        name: catData.thai_name,
        description: catData.thai_desc,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });

    await prisma.mod_category_translation.upsert({
      where: {
        category_id_language_code: {
          category_id: category.id,
          language_code: 'en',
        },
      },
      update: {},
      create: {
        category_id: category.id,
        language_code: 'en',
        name: catData.name,
        description: catData.description,
        created_by: adminUser.id,
        created_by_name: 'System Administrator',
      },
    });
  }

  // Additional content with translations
  console.log('üìù Creating additional multilingual content...');

  const productsCategory = await prisma.mod_category.findUnique({ where: { slug: 'products' } });
  const servicesCategory = await prisma.mod_category.findUnique({ where: { slug: 'services' } });
  const eventsCategory = await prisma.mod_category.findUnique({ where: { slug: 'events' } });

  if (productsCategory && servicesCategory && eventsCategory) {
    const additionalContents = [
      {
        title: 'Our Premium Products',
        slug: 'premium-products',
        content: `# Our Premium Products\n\nWe offer a wide range of premium products designed to meet your needs.\n\n## Features\n- High quality materials\n- Modern design\n- Competitive pricing\n- Excellent warranty\n\n## Categories\n1. Electronics\n2. Home & Garden\n3. Fashion\n4. Sports & Outdoors`,
        excerpt: 'Discover our premium product collection',
        category_id: productsCategory.id,
        thai_title: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤',
        thai_content: `# ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤\n\n‡πÄ‡∏£‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n\n## ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥\n- ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á\n- ‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢\n- ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÑ‡∏î‡πâ\n- ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°\n\n## ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà\n1. ‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå\n2. ‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ß‡∏ô\n3. ‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô\n4. ‡∏Å‡∏µ‡∏¨‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á`,
        thai_excerpt: '‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡∏Å‡∏ä‡∏±‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤',
      },
      {
        title: 'Professional Services',
        slug: 'professional-services',
        content: `# Professional Services\n\nOur team of experts provides top-notch professional services.\n\n## What We Offer\n- Consulting\n- Implementation\n- Training\n- Support\n\n## Why Choose Us\n- Experienced professionals\n- Proven track record\n- Customer-focused approach\n- Competitive rates`,
        excerpt: 'Expert services for your business needs',
        category_id: servicesCategory.id,
        thai_title: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û',
        thai_content: `# ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û\n\n‡∏ó‡∏µ‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ä‡∏±‡πâ‡∏ô‡∏¢‡∏≠‡∏î\n\n## ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠\n- ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤\n- ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£\n- ‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°\n- ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô\n\n## ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏£‡∏≤\n- ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå\n- ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏™‡∏π‡∏à‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß\n- ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n- ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÑ‡∏î‡πâ`,
        thai_excerpt: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
      },
      {
        title: 'Annual Tech Conference 2024',
        slug: 'tech-conference-2024',
        content: `# Annual Tech Conference 2024\n\nJoin us for the biggest tech event of the year!\n\n## Event Details\n- **Date**: December 15-17, 2024\n- **Location**: Bangkok Convention Center\n- **Time**: 9:00 AM - 6:00 PM\n\n## Highlights\n- Keynote speakers from leading tech companies\n- Hands-on workshops\n- Networking opportunities\n- Product exhibitions\n\n## Registration\nEarly bird tickets available until November 30, 2024.`,
        excerpt: 'The biggest tech event of the year',
        category_id: eventsCategory.id,
        thai_title: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ 2024',
        thai_content: `# ‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ 2024\n\n‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏µ!\n\n## ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô\n- **‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà**: 15-17 ‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏° 2024\n- **‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà**: ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø\n- **‡πÄ‡∏ß‡∏•‡∏≤**: 9:00 - 18:00 ‡∏ô.\n\n## ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå\n- ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≥\n- ‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å‡∏ä‡πá‡∏≠‡∏õ‡∏†‡∏≤‡∏Ñ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥\n- ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢\n- ‡∏ô‡∏¥‡∏ó‡∏£‡∏£‡∏®‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå\n\n## ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô\n‡∏ö‡∏±‡∏ï‡∏£‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á 30 ‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô 2024`,
        thai_excerpt: '‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏µ',
      },
    ];

    for (const contentData of additionalContents) {
      const content = await prisma.mod_content.upsert({
        where: { slug: contentData.slug },
        update: {},
        create: {
          title: contentData.title,
          slug: contentData.slug,
          content: contentData.content,
          excerpt: contentData.excerpt,
          category_id: contentData.category_id,
          status: 'published',
          created_by: adminUser.id,
          created_by_name: 'System Administrator',
        },
      });

      // Create translations
      await prisma.mod_content_translation.upsert({
        where: {
          content_id_language_code: {
            content_id: content.id,
            language_code: 'th',
          },
        },
        update: {},
        create: {
          content_id: content.id,
          language_code: 'th',
          title: contentData.thai_title,
          content: contentData.thai_content,
          excerpt: contentData.thai_excerpt,
          created_by: adminUser.id,
          created_by_name: 'System Administrator',
        },
      });

      await prisma.mod_content_translation.upsert({
        where: {
          content_id_language_code: {
            content_id: content.id,
            language_code: 'en',
          },
        },
        update: {},
        create: {
          content_id: content.id,
          language_code: 'en',
          title: contentData.title,
          content: contentData.content,
          excerpt: contentData.excerpt,
          created_by: adminUser.id,
          created_by_name: 'System Administrator',
        },
      });
    }
  }

  // Additional menus with translations
  console.log('üìÅ Creating additional menus...');
  
  const reportsMenu = await prisma.sys_menu.upsert({
    where: { slug: 'reports' },
    update: {},
    create: {
      name: 'Reports',
      slug: 'reports',
      icon: 'chart',
      sort_order: 5,
      created_by_name: 'System Administrator',
    },
  });

  const salesReportMenu = await prisma.sys_menu.upsert({
    where: { slug: 'sales-report' },
    update: {},
    create: {
      name: 'Sales Report',
      slug: 'sales-report',
      icon: 'bar-chart',
      url: '/reports/sales',
      parent_id: reportsMenu.id,
      sort_order: 1,
      created_by_name: 'System Administrator',
    },
  });

  const userReportMenu = await prisma.sys_menu.upsert({
    where: { slug: 'user-report' },
    update: {},
    create: {
      name: 'User Report',
      slug: 'user-report',
      icon: 'pie-chart',
      url: '/reports/users',
      parent_id: reportsMenu.id,
      sort_order: 2,
      created_by_name: 'System Administrator',
    },
  });

  // Create menu translations
  const additionalMenuTranslations = [
    { menu: reportsMenu, lang: 'th', name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô' },
    { menu: salesReportMenu, lang: 'th', name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢' },
    { menu: userReportMenu, lang: 'th', name: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ' },
  ];

  for (const trans of additionalMenuTranslations) {
    await prisma.sys_menu_translation.upsert({
      where: {
        menu_id_language_code: {
          menu_id: trans.menu.id,
          language_code: trans.lang,
        },
      },
      update: {},
      create: {
        menu_id: trans.menu.id,
        language_code: trans.lang,
        name: trans.name,
        created_by_name: 'System Administrator',
      },
    });
  }

  // Additional system settings
  console.log('‚öôÔ∏è Creating additional system settings...');
  
  const additionalSettings = [
    {
      key: 'date_format',
      value: 'DD/MM/YYYY',
      description: 'Date format used throughout the system',
    },
    {
      key: 'time_format',
      value: '24h',
      description: 'Time format (12h or 24h)',
    },
    {
      key: 'currency',
      value: 'THB',
      description: 'Default currency',
    },
    {
      key: 'timezone',
      value: 'Asia/Bangkok',
      description: 'System timezone',
    },
    {
      key: 'items_per_page',
      value: '20',
      description: 'Default number of items per page in lists',
    },
    {
      key: 'enable_notifications',
      value: 'true',
      description: 'Enable system notifications',
    },
    {
      key: 'maintenance_mode',
      value: 'false',
      description: 'Enable maintenance mode',
    },
  ];

  for (const setting of additionalSettings) {
    await prisma.sys_setting.upsert({
      where: { key: setting.key },
      update: {},
      create: {
        key: setting.key,
        value: setting.value,
        description: setting.description,
        created_by_name: 'System Administrator',
      },
    });
  }

  console.log('‚úÖ Multilingual data seeded successfully!');
  console.log('');
  console.log('üìä Summary:');
  console.log('- Added additional labels with Thai translations');
  console.log('- Created new content categories (Products, Services, Events, Gallery)');
  console.log('- Added multilingual content examples');
  console.log('- Created Reports menu with submenus');
  console.log('- Added system settings for localization');
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding multilingual data:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
