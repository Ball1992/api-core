generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// System Settings
model sys_setting {
  id                String   @id @default(cuid()) @db.VarChar(25)
  key               String   @unique @db.VarChar(50)
  value             String?  @db.Text
  description       String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  @@map("sys_setting")
}

// Roles
model sys_role {
  id                String   @id @default(cuid()) @db.VarChar(25)
  name              String   @unique @db.VarChar(50)
  description       String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  users             sys_user[]
  permissions       sys_role_permission[]

  @@map("sys_role")
}

// Role Permissions
model sys_role_permission {
  id                String   @id @default(cuid()) @db.VarChar(25)
  role_id           String   @db.VarChar(25)
  menu_id           String   @db.VarChar(25)
  can_view          Boolean  @default(false)
  can_create        Boolean  @default(false)
  can_update        Boolean  @default(false)
  can_delete        Boolean  @default(false)
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  role              sys_role @relation(fields: [role_id], references: [id], onDelete: Cascade)
  menu              sys_menu  @relation(fields: [menu_id], references: [id], onDelete: Cascade)

  @@unique([role_id, menu_id])
  @@map("sys_role_permission")
}

// Users
model sys_user {
  id                String    @id @default(cuid()) @db.VarChar(25)
  email             String    @unique @db.VarChar(100)
  username          String?   @unique @db.VarChar(50)
  password_hash     String?   @db.VarChar(255)
  first_name        String?   @db.VarChar(50)
  last_name         String?   @db.VarChar(50)
  phone_number      String?   @db.VarChar(20)
  avatar_url        String?   @db.VarChar(255)
  last_login_date   DateTime?
  login_method      LoginMethod @default(local)
  azure_id          String?   @unique @db.VarChar(100)
  role_id           String    @db.VarChar(25)
  is_active         Boolean   @default(true)
  created_by        String?   @db.VarChar(25)
  created_by_name   String?   @db.VarChar(100)
  created_date      DateTime  @default(now())
  updated_by        String?   @db.VarChar(25)
  updated_by_name   String?   @db.VarChar(100)
  updated_date      DateTime  @updatedAt

  role              sys_role  @relation(fields: [role_id], references: [id])
  refresh_tokens    sys_refresh_token[]
  notifications     sys_notification[]
  sys_audit_logs        sys_audit_log[]
  activity_logs     sys_log_activity[]
  created_contents  mod_content[] @relation("ContentCreatedBy")
  updated_contents  mod_content[] @relation("ContentUpdatedBy")

  @@map("sys_user")
}

// Refresh Tokens
model sys_refresh_token {
  id                String   @id @default(cuid()) @db.VarChar(25)
  token             String   @unique @db.VarChar(500)
  user_id           String   @db.VarChar(25)
  expires_at        DateTime
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  user              sys_user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sys_refresh_token")
}

// Menus
model sys_menu {
  id                String   @id @default(cuid()) @db.VarChar(25)
  name              String   @db.VarChar(100)
  slug              String   @unique @db.VarChar(100)
  icon              String?  @db.VarChar(50)
  url               String?  @db.VarChar(255)
  parent_id         String?  @db.VarChar(25)
  sort_order        Int      @default(0)
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  parent            sys_menu? @relation("MenuHierarchy", fields: [parent_id], references: [id])
  children          sys_menu[] @relation("MenuHierarchy")
  translations      sys_menu_translation[]
  permissions       sys_role_permission[]

  @@map("sys_menu")
}

// Menu Translations
model sys_menu_translation {
  id                String   @id @default(cuid()) @db.VarChar(25)
  menu_id           String   @db.VarChar(25)
  language_code     String   @db.VarChar(5)
  name              String   @db.VarChar(100)
  description       String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  menu              sys_menu  @relation(fields: [menu_id], references: [id], onDelete: Cascade)

  @@unique([menu_id, language_code])
  @@map("sys_menu_translation")
}

// Content Categories
model mod_category {
  id                String   @id @default(cuid()) @db.VarChar(25)
  name              String   @db.VarChar(100)
  slug              String   @unique @db.VarChar(100)
  description       String?  @db.Text
  parent_id         String?  @db.VarChar(25)
  sort_order        Int      @default(0)
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  parent            mod_category? @relation("CategoryHierarchy", fields: [parent_id], references: [id])
  children          mod_category[] @relation("CategoryHierarchy")
  contents          mod_content[]
  translations      mod_category_translation[]

  @@map("mod_category")
}

// Category Translations
model mod_category_translation {
  id                String   @id @default(cuid()) @db.VarChar(25)
  category_id       String   @db.VarChar(25)
  language_code     String   @db.VarChar(5)
  name              String   @db.VarChar(100)
  description       String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  category          mod_category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@unique([category_id, language_code])
  @@map("mod_category_translation")
}

// Content
model mod_content {
  id                String    @id @default(cuid()) @db.VarChar(25)
  title             String    @db.VarChar(255)
  slug              String    @unique @db.VarChar(255)
  content           String?   @db.LongText
  excerpt           String?   @db.Text
  featured_image    String?   @db.VarChar(255)
  category_id       String    @db.VarChar(25)
  status            ContentStatus @default(draft)
  publish_start_date DateTime?
  publish_end_date  DateTime?
  is_visible        Boolean   @default(true)
  view_count        Int       @default(0)
  is_active         Boolean   @default(true)
  created_by        String?   @db.VarChar(25)
  created_by_name   String?   @db.VarChar(100)
  created_date      DateTime  @default(now())
  updated_by        String?   @db.VarChar(25)
  updated_by_name   String?   @db.VarChar(100)
  updated_date      DateTime  @updatedAt

  category          mod_category @relation(fields: [category_id], references: [id])
  creator           sys_user?    @relation("ContentCreatedBy", fields: [created_by], references: [id])
  updater           sys_user?    @relation("ContentUpdatedBy", fields: [updated_by], references: [id])
  translations      mod_content_translation[]

  @@map("mod_content")
}

// Content Translations
model mod_content_translation {
  id                String   @id @default(cuid()) @db.VarChar(25)
  content_id        String   @db.VarChar(25)
  language_code     String   @db.VarChar(5)
  title             String   @db.VarChar(255)
  content           String?  @db.LongText
  excerpt           String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  parent_content    mod_content @relation(fields: [content_id], references: [id], onDelete: Cascade)

  @@unique([content_id, language_code])
  @@map("mod_content_translation")
}

// Labels
model sys_label {
  id                String   @id @default(cuid()) @db.VarChar(25)
  key               String   @unique @db.VarChar(100)
  default_value     String   @db.VarChar(500)
  description       String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  translations      sys_label_translation[]

  @@map("sys_label")
}

// Label Translations
model sys_label_translation {
  id                String   @id @default(cuid()) @db.VarChar(25)
  label_id          String   @db.VarChar(25)
  language_code     String   @db.VarChar(5)
  value             String   @db.VarChar(500)
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  label             sys_label @relation(fields: [label_id], references: [id], onDelete: Cascade)

  @@unique([label_id, language_code])
  @@map("sys_label_translation")
}

// Notifications
model sys_notification {
  id                String   @id @default(cuid()) @db.VarChar(25)
  type              NotificationType
  title             String   @db.VarChar(255)
  body              String   @db.Text
  user_id           String   @db.VarChar(25)
  is_read           Boolean  @default(false)
  read_date         DateTime?
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  user              sys_user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sys_notification")
}

// Audit Log
model sys_audit_log {
  id                String   @id @default(cuid()) @db.VarChar(25)
  table_name        String   @db.VarChar(50)
  record_id         String   @db.VarChar(25)
  action            AuditAction
  changed_by        String   @db.VarChar(25)
  field_changed     String?  @db.VarChar(50)
  old_value         String?  @db.Text
  new_value         String?  @db.Text
  ip_address        String?  @db.VarChar(45)
  user_agent        String?  @db.Text
  changed_date      DateTime @default(now())
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  user              sys_user @relation(fields: [changed_by], references: [id])

  @@map("sys_audit_log")
}

// Activity Log
model sys_log_activity {
  id                String   @id @default(cuid()) @db.VarChar(25)
  user_id           String   @db.VarChar(25)
  action            ActivityAction
  module            String   @db.VarChar(50)
  target_id         String?  @db.VarChar(25)
  description       String?  @db.Text
  ip_address        String?  @db.VarChar(45)
  user_agent        String?  @db.Text
  is_active         Boolean  @default(true)
  created_by        String?  @db.VarChar(25)
  created_by_name   String?  @db.VarChar(100)
  created_date      DateTime @default(now())
  updated_by        String?  @db.VarChar(25)
  updated_by_name   String?  @db.VarChar(100)
  updated_date      DateTime @updatedAt

  user              sys_user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sys_log_activity")
}

// Enums
enum LoginMethod {
  local
  azure
}

enum ContentStatus {
  draft
  published
  archived
}

enum NotificationType {
  info
  warning
  error
  success
}

enum AuditAction {
  CREATE
  UPDATE
  DELETE
}

enum ActivityAction {
  view
  create
  update
  delete
  login
  logout
  export
}
